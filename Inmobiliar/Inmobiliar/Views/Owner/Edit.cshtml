@model Inmobiliar.Models.PersonasModel

<div id="page-wrapper">
    <div id="page-inner">
        <div class="row">
            <div class="col-lg-12">    
                @using (Html.BeginForm("Edit", "Owner", FormMethod.Post, new { id = "frmEditOwner" }))
                    {
                    <div class="panel panel-default">
                    
                        <div class="panel-heading">
                            <h1 class="page-header">
                                <small>Nuevo Cliente</small>
                            </h1>
                        </div>
                        @if (ViewBag.TipoMsj == "Info")
                        {
                            <div class="alert alert-info alert-inline">
                                <button type="button" class="close" data-dismiss="alert">×</button>
                                <strong id="strMsj">@ViewBag.Message</strong>
                            </div>
                        }
                        @if (ViewBag.TipoMsj == "Error")
                        {
                            <div class="alert alert-danger alert-inline margin-top-50 margin-bottom-50">
                                <button type="button" class="close" data-dismiss="alert">×</button>
                                <strong>@ViewBag.Message</strong>
                            </div>
                        }
                        @if (ViewBag.TipoMsj == "Success")
                        {
                            <div class="alert alert-success alert-inline margin-top-50 margin-bottom-50">
                                <button type="button" class="close" data-dismiss="alert">×</button>
                                <strong>@ViewBag.Message</strong>
                            </div>
                        }
                        <div class="panel-body">
                            <div class="row">
                                
                                @Html.AntiForgeryToken()
                                <div class="form-group has-success  col-lg-12">
                                    <label class="control-label" for="inputSuccess">Cliente</label>
                                    <input type="text" class="form-control" id="owner" name="Inquilino" data-detalle="Cliente">                                    
                                    @Html.HiddenFor(Model => Model.PersonasId, new { id = "idInquilino" })                                                                                                          
                                </div>
                                <div class="form-group has-success col-lg-6">
                                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })                                    
                                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", id="NombreEdit" } })
                                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                    
                                </div>

                                <div class="form-group has-success col-lg-6">
                                    @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label" })        
                                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", id = "ApellidoEdit" } })
                                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })        
                                </div>

                                <div class="form-group has-success col-lg-6">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })        
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "EmailEdit" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })        
                                </div>

                                <div class="form-group has-success col-lg-6">
                                    @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })        
                                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", id = "TelefonoEdit" } })
                                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })        
                                </div>

                                <div class="form-group has-success col-lg-6">
                                    @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label" })        
                                    @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control", id = "CelularEdit" } })
                                    @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })        
                                </div>

                                <div class="form-group has-success col-lg-6">
                                    @Html.LabelFor(model => model.TelefonoLaboral, htmlAttributes: new { @class = "control-label" })        
                                    @Html.EditorFor(model => model.TelefonoLaboral, new { htmlAttributes = new { @class = "form-control", id = "TelefonoLaboralEdit" } })
                                    @Html.ValidationMessageFor(model => model.TelefonoLaboral, "", new { @class = "text-danger" })        
                                </div>

                                <div class="form-group has-success col-lg-6">
                                    @Html.LabelFor(model => model.DU, htmlAttributes: new { @class = "control-label" })        
                                    @Html.EditorFor(model => model.DU, new { htmlAttributes = new { @class = "form-control", id="DUEdit"} })
                                    @Html.ValidationMessageFor(model => model.DU, "", new { @class = "text-danger" })        
                                </div>                                                                                               
                            </div>
                        </div>
                        <div class="panel-footer">
                            <div class="form-group">
                                <button class="btn btn-primary" data-toggle="modal" data-target="#myModal">
                                    Modificar
                                </button>                                                                                                                              
                            </div>
                            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                            <h4 class="modal-title" id="myModalLabel">Confirmación</h4>
                                        </div>
                                        <div class="modal-body">
                                            ¿Esta seguro que desea modificar los datos del cliente. ?
                                        </div>
                                        <div class="modal-footer">                                            
                                            <input type="submit" value="Si" class="btn btn-primary" />  
                                            <button type="button" class="btn btn-default" data-dismiss="modal">No</button>                                            
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>                    
                    </div>
                    }        
            </div>
        </div>
    </div>
</div>